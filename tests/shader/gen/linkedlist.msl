#version 450
layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

layout(binding = 0, std430) buffer MemBuf
{
    uint mem[];
} _56;

void main()
{
    uint rng = gl_GlobalInvocationID.x + 1u;
    for (uint i = 0u; i < 100u; i++)
    {
        rng ^= (rng << uint(13));
        rng ^= (rng >> uint(17));
        rng ^= (rng << uint(5));
        uint bucket = rng % 65536u;
        if (bucket != 0u)
        {
            uint _61 = atomicAdd(_56.mem[0], 2u);
            uint alloc = _61 + 65536u;
            uint _67 = atomicExchange(_56.mem[bucket], alloc);
            uint old = _67;
            _56.mem[alloc] = old;
            _56.mem[alloc + 1u] = gl_GlobalInvocationID.x;
        }
    }
}

