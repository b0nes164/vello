#version 450
layout(local_size_x = 512, local_size_y = 1, local_size_z = 1) in;

struct Monoid
{
    uint element;
};

layout(binding = 0, std430) readonly buffer InBuf
{
    Monoid inbuf[];
} _40;

layout(binding = 1, std430) buffer OutBuf
{
    Monoid outbuf[];
} _127;

shared Monoid sh_scratch[512];

Monoid combine_monoid(Monoid a, Monoid b)
{
    return Monoid(a.element + b.element);
}

void main()
{
    uint ix = gl_GlobalInvocationID.x * 8u;
    Monoid agg;
    agg.element = _40.inbuf[ix].element;
    Monoid param_1;
    for (uint i = 1u; i < 8u; i++)
    {
        Monoid param = agg;
        param_1.element = _40.inbuf[ix + i].element;
        agg = combine_monoid(param, param_1);
    }
    sh_scratch[gl_LocalInvocationID.x] = agg;
    for (uint i_1 = 0u; i_1 < 9u; i_1++)
    {
        barrier();
        if ((gl_LocalInvocationID.x + (1u << i_1)) < 512u)
        {
            Monoid other = sh_scratch[gl_LocalInvocationID.x + (1u << i_1)];
            Monoid param_2 = agg;
            Monoid param_3 = other;
            agg = combine_monoid(param_2, param_3);
        }
        barrier();
        sh_scratch[gl_LocalInvocationID.x] = agg;
    }
    if (gl_LocalInvocationID.x == 0u)
    {
        _127.outbuf[gl_WorkGroupID.x].element = agg.element;
    }
}

